library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = W398RC1A027NBEA)) +
geom_line(color = "DarkViolet") +
labs(title = "Time Series Plot of Household Income",
x = "Date",
y = "The Household Income") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA2 <- SMA(df$W398RC1A027NBEA, n=2)
df$MA4 <- SMA(df$W398RC1A027NBEA, n=4)
df$MA8 <- SMA(df$W398RC1A027NBEA, n=8)
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = W398RC1A027NBEA)) +
geom_line(color = "DarkViolet") +
labs(title = "Time Series Plot of Household Income",
x = "Date",
y = "The Household Income") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA2 <- SMA(df$W398RC1A027NBEA, n=2)
df$MA4 <- SMA(df$W398RC1A027NBEA, n=4)
df$MA8 <- SMA(df$W398RC1A027NBEA, n=8)
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
# Calculate Moving Averages
df$MA2 <- SMA(df$W398RC1A027NBEA, n=2)
df$MA4 <- SMA(df$W398RC1A027NBEA, n=8)
df$MA8 <- SMA(df$W398RC1A027NBEA, n=15)
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = W398RC1A027NBEA)) +
geom_line(color = "DarkViolet") +
labs(title = "Time Series Plot of Household Income",
x = "Date",
y = "The Household Income") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA2 <- SMA(df$W398RC1A027NBEA, n=2)
df$MA4 <- SMA(df$W398RC1A027NBEA, n=4)
df$MA8 <- SMA(df$W398RC1A027NBEA, n=8)
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(htmlwidgets)
saveWidget(p, file = "../../../image/DataSource/gdpma.html")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(htmlwidgets)
saveWidget(p, file = "../../../image/EDA/gdpma.html")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = '#black',  # background color of the plotting area
paper_bgcolor = '#black', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = 'black',  # background color of the plotting area
paper_bgcolor = 'black', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
library(htmlwidgets)
saveWidget(p, file = "../../../image/EDA/gdpma.html")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = '#E0E0E0')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = '#E0E0E0', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = '#E0E0E0', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = '#E0E0E0', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date", color = '#E0E0E0', tickcolor = '#E0E0E0'),
yaxis = list(title = "W398RC1A027NBEA", color = '#E0E0E0', tickcolor = '#E0E0E0'),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
font = list(color = '#E0E0E0'),
legend = list(title = list(text = "W398RC1A027NBEA Data", font = list(color = '#E0E0E0')),
itemsizing = "constant", font = list(color = '#E0E0E0'))
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date", color = '#E0E0E0', tickcolor = '#E0E0E0'),
yaxis = list(title = "W398RC1A027NBEA", color = '#E0E0E0', tickcolor = '#E0E0E0'),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
font = list(color = '#E0E0E0'),
legend = list(title = list(text = "W398RC1A027NBEA Data", font = list(color = '#E0E0E0')),
itemsizing = "constant", font = list(color = '#E0E0E0'))
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
# Calculate Moving Averages
df$MA2 <- SMA(df$W398RC1A027NBEA, n=2)
df$MA4 <- SMA(df$W398RC1A027NBEA, n=4)
df$MA8 <- SMA(df$W398RC1A027NBEA, n=8)
fig <- df %>%
plot_ly(x = ~DATE, type = "scatter", mode = "lines") %>%
add_lines(y = ~W398RC1A027NBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(y = ~MA2, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(y = ~MA4, name = 'MA(4)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(y = ~MA8, name = 'MA(8)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing",
xaxis = list(title = "Date"),
yaxis = list(title = "W398RC1A027NBEA"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "W398RC1A027NBEA Data"),
itemsizing = "constant")
)
# Display the plot
fig
library(htmlwidgets)
saveWidget(p, file = "../../../image/EDA/gdpma.html")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(plotly)
htmlwidgets::saveWidget(fig, "../../../image/EDA/gdpma.html")
df <- read.csv("../../Dataset/project/household_saving.csv")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../Dataset/project/household_saving.csv")
