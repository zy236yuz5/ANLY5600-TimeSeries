library(plotly)
htmlwidgets::saveWidget(fig, "../../../image/EDA/HSP.html")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=50)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=100)
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=50)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=100)
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=50)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=100)
fig <- df %>%
plot_ly(type = "scatter", mode = "lines") %>%
add_lines(x = ~DATE, y = ~A191RI1Q225SBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(x = ~DATE, y = ~MA20, name = 'MA(2)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA50, name = 'MA(8)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA100, name = 'MA(16)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing For House Sale Price",
xaxis = list(title = "Date"),
yaxis = list(title = "House Sale Price"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "House Sale Price"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=5)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=50)
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=5)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=50)
fig <- df %>%
plot_ly(type = "scatter", mode = "lines") %>%
add_lines(x = ~DATE, y = ~A191RI1Q225SBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(x = ~DATE, y = ~MA20, name = 'MA(5)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA50, name = 'MA(20)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA100, name = 'MA(50)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing For House Sale Price",
xaxis = list(title = "Date"),
yaxis = list(title = "House Sale Price"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "House Sale Price"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=5)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=50)
fig <- df %>%
plot_ly(type = "scatter", mode = "lines") %>%
add_lines(x = ~DATE, y = ~A191RI1Q225SBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(x = ~DATE, y = ~MA20, name = 'MA(5)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA50, name = 'MA(20)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA100, name = 'MA(50)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing For House Sale Price",
xaxis = list(title = "Date"),
yaxis = list(title = "House Sale Price"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "House Sale Price"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=5)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=50)
fig <- df %>%
plot_ly(type = "scatter", mode = "lines") %>%
add_lines(x = ~DATE, y = ~A191RI1Q225SBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(x = ~DATE, y = ~MA20, name = 'MA(5)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA50, name = 'MA(20)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA100, name = 'MA(50)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing For GDP Changes",
xaxis = list(title = "Date"),
yaxis = list(title = "GDP Changes"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "GDP Changes"),
itemsizing = "constant")
)
# Display the plot
fig
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
df$DATE <- as.Date(df$DATE)
head(df)
library(ggplot2)
ggplot(data = df, aes(x = DATE, y = A191RI1Q225SBEA)) +
geom_line(color = "blue") +
labs(title = "Time Series Plot of GDP Changes",
x = "Date",
y = "The Sale Price") +
theme_minimal() +
theme(panel.background = element_rect(fill = "#E0E0E0"),
panel.grid.major = element_line(color = "grey", size = 0.1),
panel.grid.minor = element_line(color = "grey", size = 0.05),
plot.background = element_rect(fill = "#E0E0E0"))
# Calculate Moving Averages
df$MA20 <- SMA(df$A191RI1Q225SBEA, n=5)
df$MA50 <- SMA(df$A191RI1Q225SBEA, n=20)
df$MA100 <- SMA(df$A191RI1Q225SBEA, n=50)
fig <- df %>%
plot_ly(type = "scatter", mode = "lines") %>%
add_lines(x = ~DATE, y = ~A191RI1Q225SBEA, name = 'Original', line = list(color = 'blue')) %>%
add_lines(x = ~DATE, y = ~MA20, name = 'MA(5)', line = list(color = 'red', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA50, name = 'MA(20)', line = list(color = 'green', dash = 'dash')) %>%
add_lines(x = ~DATE, y = ~MA100, name = 'MA(50)', line = list(color = 'purple', dash = 'dash')) %>%
layout(title = "Moving Average Smoothing For GDP Changes",
xaxis = list(title = "Date"),
yaxis = list(title = "GDP Changes"),
plot_bgcolor = '#E0E0E0',  # background color of the plotting area
paper_bgcolor = '#E0E0E0', # background color of the entire plot (around the plotting area)
legend = list(title = list(text = "GDP Changes"),
itemsizing = "constant")
)
# Display the plot
fig
library(plotly)
htmlwidgets::saveWidget(fig, "../../../image/EDA/gdpma.html")
library(reticulate)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(lubridate)
library(plotly)
library(TTR) # For the SMA function
df <- read.csv("../../../Dataset/project/A191RI1Q225SBEA.csv")
